{
	"info": {
		"_postman_id": "ticket-export-date-range-tests",
		"name": "Ticket Export with Date Range Testing",
		"description": "Comprehensive test collection for the enhanced ticket export endpoint with optional date range filtering",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Export All Tickets (No Date Filter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains success message\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Tickets exported and emailed successfully\");",
							"});",
							"",
							"pm.test(\"Response time is less than 10000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{admin_user_id}}\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Export Tickets with Start Date Only",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains success message with date filter info\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Tickets exported and emailed successfully\");",
							"    pm.expect(pm.response.text()).to.include(\"filtered by date range\");",
							"});",
							"",
							"pm.test(\"Response time is less than 10000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{admin_user_id}}\",\n  \"startDate\": \"2024-01-01T00:00:00\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Export Tickets with End Date Only",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains success message with date filter info\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Tickets exported and emailed successfully\");",
							"    pm.expect(pm.response.text()).to.include(\"filtered by date range\");",
							"});",
							"",
							"pm.test(\"Response time is less than 10000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{admin_user_id}}\",\n  \"endDate\": \"2024-12-31T23:59:59\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Export Tickets with Both Start and End Date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains success message with date filter info\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Tickets exported and emailed successfully\");",
							"    pm.expect(pm.response.text()).to.include(\"filtered by date range\");",
							"});",
							"",
							"pm.test(\"Response time is less than 10000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{admin_user_id}}\",\n  \"startDate\": \"2024-06-01T00:00:00\",\n  \"endDate\": \"2024-06-30T23:59:59\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Export Using Email Instead of UserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains success message\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Tickets exported and emailed successfully\");",
							"});",
							"",
							"pm.test(\"Response time is less than 10000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"startDate\": \"2024-01-01T00:00:00\",\n  \"endDate\": \"2024-12-31T23:59:59\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Error Test - Invalid Date Format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains date format error message\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Invalid date format\");",
							"    pm.expect(pm.response.text()).to.include(\"yyyy-MM-ddTHH:mm:ss\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{admin_user_id}}\",\n  \"startDate\": \"2024-01-01\",\n  \"endDate\": \"invalid-date\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. Error Test - Start Date After End Date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains date range error message\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Start date cannot be after end date\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{admin_user_id}}\",\n  \"startDate\": \"2024-12-31T23:59:59\",\n  \"endDate\": \"2024-01-01T00:00:00\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "8. Error Test - Non-Admin User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"Response contains authorization error message\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Not authorized: Only admins can export tickets\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{regular_user_id}}\",\n  \"startDate\": \"2024-01-01T00:00:00\",\n  \"endDate\": \"2024-12-31T23:59:59\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "9. Error Test - Missing User Identification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains missing user error message\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Either userId or email is required\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"startDate\": \"2024-01-01T00:00:00\",\n  \"endDate\": \"2024-12-31T23:59:59\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "10. Edge Test - Empty Date Strings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response treats empty dates as no filter\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Tickets exported and emailed successfully\");",
							"    pm.expect(pm.response.text()).to.not.include(\"filtered by date range\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{admin_user_id}}\",\n  \"startDate\": \"\",\n  \"endDate\": \"\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/tickets/admin/export",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tickets",
						"admin",
						"export"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "admin_user_id",
			"value": "your_admin_user_id_here",
			"type": "string"
		},
		{
			"key": "admin_email",
			"value": "admin@example.com",
			"type": "string"
		},
		{
			"key": "regular_user_id",
			"value": "regular_user_id_here",
			"type": "string"
		}
	]
}
