version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins:2.426.1-lts
    container_name: fire-fighter-jenkins
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins-config:/usr/share/jenkins/ref/init.groovy.d
      - ./jenkins-config/plugins.txt:/usr/share/jenkins/ref/plugins.txt
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Xmx2g -Xms1g
    networks:
      - jenkins-network
    user: root  # Required for Docker socket access
    
  jenkins-agent:
    image: jenkins/inbound-agent:latest
    container_name: fire-fighter-jenkins-agent
    restart: unless-stopped
    environment:
      - JENKINS_URL=http://jenkins:8080
      - JENKINS_SECRET=${JENKINS_AGENT_SECRET}
      - JENKINS_AGENT_NAME=docker-agent
      - JENKINS_AGENT_WORKDIR=/home/jenkins/agent
    volumes:
      - jenkins_agent_workdir:/home/jenkins/agent
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins-network
    depends_on:
      - jenkins
    user: root

  # Optional: SonarQube for code quality analysis
  sonarqube:
    image: sonarqube:9.9-community
    container_name: fire-fighter-sonarqube
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar_password
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - jenkins-network
    depends_on:
      - sonar-db

  sonar-db:
    image: postgres:15
    container_name: fire-fighter-sonar-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar_password
      - POSTGRES_DB=sonar
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    networks:
      - jenkins-network

  # Optional: Nexus Repository for artifact management
  nexus:
    image: sonatype/nexus3:3.42.0
    container_name: fire-fighter-nexus
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    environment:
      - INSTALL4J_ADD_VM_PARAMS=-Xms1g -Xmx2g -XX:MaxDirectMemorySize=3g
    networks:
      - jenkins-network

volumes:
  jenkins_home:
    driver: local
  jenkins_agent_workdir:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_logs:
    driver: local
  sonarqube_extensions:
    driver: local
  sonar_db_data:
    driver: local
  nexus_data:
    driver: local

networks:
  jenkins-network:
    driver: bridge
