name: Fire-Fighter CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Fire-Fighter Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Cache Node.js dependencies
      uses: actions/cache@v4
      with:
        path: FF-Angular/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('FF-Angular/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-

    - name: Install Backend Dependencies
      working-directory: FF-API
      run: mvn clean compile -DskipTests=true

    - name: Install Frontend Dependencies
      working-directory: FF-Angular
      run: npm install

    - name: Create Firebase Service Account File
      working-directory: FF-API/src/main/resources
      run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > firebase-service-account.json

    - name: Run Backend Unit Tests
      working-directory: FF-API
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_SSL_MODE: ${{ secrets.DB_SSL_MODE }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        GMAIL_SENDER_NAME: ${{ secrets.GMAIL_SENDER_NAME }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
      run: mvn -Dtest=com.apex.firefighter.unit.**.*Test test -Dspring.profiles.active=test

    - name: Run Backend Integration Tests
      working-directory: FF-API
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_SSL_MODE: ${{ secrets.DB_SSL_MODE }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        GMAIL_SENDER_NAME: ${{ secrets.GMAIL_SENDER_NAME }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
      run: mvn -Dtest=com.apex.firefighter.integration.**.*Test test -Dspring.profiles.active=test

    - name: Run Frontend Tests
      working-directory: FF-Angular
      run: npm test -- --watch=false --browsers=ChromeHeadless

    - name: Build Backend
      working-directory: FF-API
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_SSL_MODE: ${{ secrets.DB_SSL_MODE }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        GMAIL_SENDER_NAME: ${{ secrets.GMAIL_SENDER_NAME }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
      run: mvn package -DskipTests=true

    - name: Build Frontend
      working-directory: FF-Angular
      run: npx ng build

    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: FF-API/target/surefire-reports/*.xml
        reporter: java-junit

    - name: Upload Backend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: firefighter-backend
        path: FF-API/target/firefighter-platform-0.0.1-SNAPSHOT.jar

    - name: Upload Frontend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: firefighter-frontend
        path: FF-Angular/www/

    - name: Clean up Firebase Service Account File
      if: always()
      working-directory: FF-API/src/main/resources
      run: rm -f firebase-service-account.json
